(()=>{var e={677:(e,t,r)=>{const{pipe:a,flatMap:i}=r(52),{beginning_of_day:n,beginning_of_hour:o,hours_after:p,next_24_hours:s,hours_in_latest_week:c}=r(416),m=r(491),l=e=>t=>Math.floor(t*Math.pow(10,e))/Math.pow(10,e),u=({min:e,max:t})=>l(1)(Math.random()*(t-e)+e),d=({min:e,max:t,width:r})=>{const a=u({min:e,max:t-r});return{from:a,to:l(1)(a+u({min:1,max:r}))}},_=e=>Math.floor(Math.random()*e.length),h=e=>e[_(e)],f=e=>{const t=_(e),r=_(e)+1;return e.concat(e).slice(t,t+r)},g=["Horsens","Aarhus","Copenhagen"],w={min:-10,max:30,width:5},y={min:0,max:20,width:10},v=["rain","sleet","hail","snow"],x={min:0,max:40,width:10},M=["North","Northeast","East","Southeast","South","Southwest","West","Northwest"],b={min:0,max:100,width:50},j=e=>{return[m.temperature_prediction(d(w),e),m.precipitation_prediction(d(y),(t=v,t.filter((e=>Math.random()<.5))),e),m.wind_prediction(d(x),f(M),e),m.cloud_prediction(d(b),e)];var t},k=({type:e,to:t})=>"precipitation"===e&&t>=17||"wind speed"===e&&t>=36,D=a((e=>c(n(e))),i((e=>g.map((t=>m.event(e,t)))))),O=a(D,i((e=>[m.temperature(u(w),e),m.precipitation(u(y),h(v),e),m.wind(u(x),h(M),e),m.cloud(u(b),e)]))),T=a((e=>s(p(o(e))(1))),i((e=>g.map((t=>m.event(e,t)))))),q=a(T,i(j));e.exports={generate_historic_data:O,generate_forecast:q,regenerate_forecast:e=>a(T,i((t=>{const{time:r,place:a}=t({}),i=e.filter((e=>e.time.getTime()===r.getTime()&&e.place===a)),n=j(t);return 0===i.length?n:i.map((e=>{const t=.8+.4*Math.random();return k(e)&&Math.random()<.5?Object.assign({},e,{from:l(1)(e.from*t),to:l(1)(e.to*t)}):Math.random()<.5?n.find((t=>e.type===t.type)):e}))}))),alertable:k}},491:e=>{const t=(...e)=>t=>r=>[].concat(...e).every((e=>null===t[e]&&null===r[e]||t[e].equals&&t[e].equals(r[e])||t[e]===r[e])),r=(...e)=>r=>Object.assign({},r,{equals:t(...e)(r)}),a=(e,t)=>r=>Object.assign({},r,{type:e,unit:t}),i=e=>(t,r)=>Object.assign(Object.create({event:()=>r}),r(e(t))),n=i(a("temperature","C")),o=i(a("precipitation","mm")),p=i(a("wind speed","m/s")),s=i(a("cloud coverage","%")),c=["time","place","type","unit","from","to"],m=r(c);e.exports={event:(e,t)=>r=>Object.assign({},r,{time:e,place:t}),temperature:(e,t)=>n({value:e},t),temperature_prediction:({from:e,to:t},r)=>m(n({from:e,to:t},r)),wind:(e,t,r)=>p({value:e,direction:t},r),wind_prediction:({from:e,to:t},a,i)=>r(c.concat("directions"))(p({from:e,to:t,directions:a},i)),precipitation:(e,t,r)=>o({value:e,precipitation_type:t},r),precipitation_prediction:({from:e,to:t},a,i)=>r(c.concat("precipitation_types"))(o({from:e,to:t,precipitation_types:a},i)),cloud:(e,t)=>s({value:e},t),cloud_prediction:({from:e,to:t},r)=>m(s({from:e,to:t},r)),alert:(e,t,a)=>{const i=(e,t,a)=>{const n=e=>a&&e&&e.time&&e.place&&e.type&&a.time.getTime()===e.time.getTime()&&a.place===e.place&&a.type===e.type;return r("id","severity","prediction")({id:e,severity:t,prediction:a,matches:n,cancelled:()=>i(e,0,null),updated:r=>{if(n(r)){if(r.to>a.to)return i(e,t+1,r);if(r.to<a.to&&t>1)return i(e,t-1,r)}return i(e,t,a)}})};if(e<1||t<1||!a||!a.time||!a.place||!a.type)throw"Illegal parameters";return i(e,t,a)}}},416:(e,t,r)=>{const{pipe:a,flatMap:i,range:n}=r(52),o=36e5,p=864e5,s=e=>new Date(e.getFullYear(),e.getMonth(),e.getDate()),c=e=>t=>new Date(t.getTime()+e*p),m=c(-7),l=c(1),u=e=>t=>new Date(e.getTime()+t*o),d=e=>n(24).map(u(e)),_=e=>n(7).map((t=>c(t)(m(s(e))))),h=a(_,i(d));e.exports={ms_per_hour:o,ms_per_day:p,days_per_week:7,beginning_of_day:s,beginning_of_hour:e=>new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours()),days_later:c,week_before:m,next_day:l,hours_after:u,next_24_hours:d,latest_week:_,hours_in_latest_week:h}},52:e=>{const t=e=>[].concat(...e);e.exports={flatten:t,flatMap:e=>r=>t(r.map(e)),range:e=>[...Array(e).keys()],pipe:(...e)=>t=>e.reduce(((e,t)=>t(e)),t),findIndeces:e=>t=>t.map(((e,t)=>[e,t])).filter((([t])=>e(t))).map((([e,t])=>t)),partition:e=>t=>{const r=[],a=[];return t.forEach((t=>{e(t)?r.push(t):a.push(t)})),{positive:r,negative:a}},findLast:e=>t=>{const r=t.filter(e);return r[r.length-1]}}}},t={};function r(a){var i=t[a];if(void 0!==i)return i.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,r),n.exports}r(677),console.log(generate_historic_data())})();